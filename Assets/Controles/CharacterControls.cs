//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Controles/CharacterControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @CharacterControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @CharacterControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""CharacterControls"",
    ""maps"": [
        {
            ""name"": ""Movimiento"",
            ""id"": ""812403c1-5810-4ad5-867b-3c1adac15550"",
            ""actions"": [
                {
                    ""name"": ""Movimiento"",
                    ""type"": ""Value"",
                    ""id"": ""f070b7e9-6a7b-438f-a4e7-a1387fadbdb6"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Salto"",
                    ""type"": ""Button"",
                    ""id"": ""b267e0ce-f850-4c40-99e8-738d91407b49"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Entrar"",
                    ""type"": ""Button"",
                    ""id"": ""732a068e-91ed-43f4-b861-ade2ae01bc52"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Golpe"",
                    ""type"": ""Button"",
                    ""id"": ""88938a0b-91ea-443e-b3f6-29d59a1f9c0c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""e3835368-fa62-48af-a8ed-4e2f2153db60"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimiento"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""left"",
                    ""id"": ""298c10cc-67d3-432c-aaba-c6b2bb9543a0"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimiento"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""57a0287e-2f43-44b1-8ff6-5f7c94751ec1"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimiento"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""527402c9-c369-4ead-8d2c-84c0acbcf692"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Salto"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ec472cea-18f3-4994-9ba2-d0911c674701"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Entrar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0a4240b2-807c-4958-98ea-e0c9c36a0bfd"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Golpe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Movimiento
        m_Movimiento = asset.FindActionMap("Movimiento", throwIfNotFound: true);
        m_Movimiento_Movimiento = m_Movimiento.FindAction("Movimiento", throwIfNotFound: true);
        m_Movimiento_Salto = m_Movimiento.FindAction("Salto", throwIfNotFound: true);
        m_Movimiento_Entrar = m_Movimiento.FindAction("Entrar", throwIfNotFound: true);
        m_Movimiento_Golpe = m_Movimiento.FindAction("Golpe", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Movimiento
    private readonly InputActionMap m_Movimiento;
    private IMovimientoActions m_MovimientoActionsCallbackInterface;
    private readonly InputAction m_Movimiento_Movimiento;
    private readonly InputAction m_Movimiento_Salto;
    private readonly InputAction m_Movimiento_Entrar;
    private readonly InputAction m_Movimiento_Golpe;
    public struct MovimientoActions
    {
        private @CharacterControls m_Wrapper;
        public MovimientoActions(@CharacterControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movimiento => m_Wrapper.m_Movimiento_Movimiento;
        public InputAction @Salto => m_Wrapper.m_Movimiento_Salto;
        public InputAction @Entrar => m_Wrapper.m_Movimiento_Entrar;
        public InputAction @Golpe => m_Wrapper.m_Movimiento_Golpe;
        public InputActionMap Get() { return m_Wrapper.m_Movimiento; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MovimientoActions set) { return set.Get(); }
        public void SetCallbacks(IMovimientoActions instance)
        {
            if (m_Wrapper.m_MovimientoActionsCallbackInterface != null)
            {
                @Movimiento.started -= m_Wrapper.m_MovimientoActionsCallbackInterface.OnMovimiento;
                @Movimiento.performed -= m_Wrapper.m_MovimientoActionsCallbackInterface.OnMovimiento;
                @Movimiento.canceled -= m_Wrapper.m_MovimientoActionsCallbackInterface.OnMovimiento;
                @Salto.started -= m_Wrapper.m_MovimientoActionsCallbackInterface.OnSalto;
                @Salto.performed -= m_Wrapper.m_MovimientoActionsCallbackInterface.OnSalto;
                @Salto.canceled -= m_Wrapper.m_MovimientoActionsCallbackInterface.OnSalto;
                @Entrar.started -= m_Wrapper.m_MovimientoActionsCallbackInterface.OnEntrar;
                @Entrar.performed -= m_Wrapper.m_MovimientoActionsCallbackInterface.OnEntrar;
                @Entrar.canceled -= m_Wrapper.m_MovimientoActionsCallbackInterface.OnEntrar;
                @Golpe.started -= m_Wrapper.m_MovimientoActionsCallbackInterface.OnGolpe;
                @Golpe.performed -= m_Wrapper.m_MovimientoActionsCallbackInterface.OnGolpe;
                @Golpe.canceled -= m_Wrapper.m_MovimientoActionsCallbackInterface.OnGolpe;
            }
            m_Wrapper.m_MovimientoActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movimiento.started += instance.OnMovimiento;
                @Movimiento.performed += instance.OnMovimiento;
                @Movimiento.canceled += instance.OnMovimiento;
                @Salto.started += instance.OnSalto;
                @Salto.performed += instance.OnSalto;
                @Salto.canceled += instance.OnSalto;
                @Entrar.started += instance.OnEntrar;
                @Entrar.performed += instance.OnEntrar;
                @Entrar.canceled += instance.OnEntrar;
                @Golpe.started += instance.OnGolpe;
                @Golpe.performed += instance.OnGolpe;
                @Golpe.canceled += instance.OnGolpe;
            }
        }
    }
    public MovimientoActions @Movimiento => new MovimientoActions(this);
    public interface IMovimientoActions
    {
        void OnMovimiento(InputAction.CallbackContext context);
        void OnSalto(InputAction.CallbackContext context);
        void OnEntrar(InputAction.CallbackContext context);
        void OnGolpe(InputAction.CallbackContext context);
    }
}
